词法作用域 —— 只由函数被声明时所处的位置决定
两种方式欺骗词法：eval 函数、with 关键字
eval(..) 和with 会在运行时修改或创建新的作用域，以此来欺骗其他在书写时定义的词
法作用域。
无论何种情况，eval(..) 都可以在运行期修改书写期的词法作用域。
eval(..) 函数如果接受了含有一个或多个声明的代码，就会修改其所处的词法作用域，而
with 声明实际上是根据你传递给它的对象凭空创建了一个全新的词法作用域。
它们都会受严格模式的影响。
会影响引擎编译时的优化机制，进而影响性能。

